Publicar con GitHub Pages
Para desplegar tu aplicaci√≥n en GitHub Pages:

Abre el archivo package.json y agrega esta l√≠nea:

    "homepage": "https://tu-usuario.github.io/nombre-del-repo"

Instala gh-pages (si no lo tienes ya):
    npm install gh-pages --save-dev


Agrega estos scripts en package.json:
    "scripts": {
    "predeploy": "npm run build",
    "deploy": "gh-pages -d build"
    }


Construye y despliega la app:
npm run deploy



Activa GitHub Pages:
Ve a tu repositorio en GitHub.
Ve a Settings > Pages.
En Branch, elige gh-pages y guarda.
üìå Tu app estar√° disponible en:
https://tu-usuario.github.io/nombre-del-repo/


¬°Listo! üéâ Cada vez que hagas cambios, solo necesitas ejecutar:
    npm run deploy
    
para actualizar la p√°gina.


S√≠, puedes hacer todo eso con Yarn sin problemas. Aqu√≠ est√° la versi√≥n con Yarn:

1Ô∏è‚É£ Instalar gh-pages con Yarn
bash
Copiar
Editar
yarn add gh-pages --dev
2Ô∏è‚É£ Configurar package.json
Aseg√∫rate de que package.json tenga esto:

json
Copiar
Editar
"homepage": "https://tu-usuario.github.io/nombre-del-repo",
"scripts": {
  "predeploy": "yarn build",
  "deploy": "gh-pages -d build"
}
3Ô∏è‚É£ Hacer el Deploy
Ejecuta:

bash
Copiar
Editar
yarn deploy
Esto:

Compila la app (yarn build).
Crea la rama gh-pages y sube los archivos de build/.
4Ô∏è‚É£ Activar GitHub Pages
Despu√©s del deploy, ve a Settings > Pages en tu repositorio y selecciona gh-pages.

5Ô∏è‚É£ Acceder a tu app
Despu√©s de unos minutos, tu app estar√° en:

arduino
Copiar
Editar
https://tu-usuario.github.io/nombre-del-repo/